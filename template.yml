apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: v1beta3-demo
  title: Golang template
  description: Just a golang template
spec:
  owner: user:guest
  type: service

  parameters:
    - title: Repository name
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Repository name
          ui:autofocus: true

  steps:
    - id: fetch-base-repo
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template-v2
        values:
          name: ${{ parameters.name }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is a test
        repoUrl: github.com?repo=${{ parameters.name }}&owner=backstage-ct
        defaultBranch: main
        repoVisibility: public

    - id: fetch-base-argocd
      name: Fetch Base
      action: fetch:template
      input:
        url: ./argocd-template
        values:
          name: ${{ parameters.name }}

    - id: fetch-remote-argocd-repo
      name: Fetch Remote ArgoCD Repo
      action: fetch:plain
      input:
        url: https://github.com/backstage-ct/argocd-hackathon-demo.git
        targetPath: argocd-hackathon-demo

    - id: copy-application
      name: Copy argocd application file
      action: fs:rename
      input:
        files:
          - from: ./application.yaml
            to: ./argocd-hackathon-demo/argocd/${{ parameters.name }}-argocd-application.yaml

    - id: pr-to-argo-repo
      name: PR to ArgoCD repo
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=argocd-hackathon-demo&owner=backstage-ct
        description: Pull request for ${{ parameters.name }}-argocd-application.
        branchName: ${{ parameters.name }}-argocd-application
        gitCommitMessage: Add new application ${{ parameters.name }}.
        title: Creating a new argocd application for hackathon
        sourcePath: ./argocd-hackathon-demo

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: './service-catalog/catalog.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Argo Pull Request
        url: ${{ steps['pr-to-argo-repo'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
